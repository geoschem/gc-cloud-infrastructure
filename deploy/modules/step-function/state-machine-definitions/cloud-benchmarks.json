{
    "Comment": "Run Automated Benchmarks",
    "StartAt": "Evaluate_RunType",
    "States": {
      "Evaluate_RunType": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.event.runType",
            "StringEquals": "GCC",
            "Next": "Invoke_CreateRunDirectoryGCC"
          },
          {
            "Variable": "$.event.runType",
            "StringEquals": "GCHP",
            "Next": "Invoke_CreateRunDirectoryGCHP"
          }
        ],
        "Default": "WorkflowFailed"
      },
      "Invoke_CreateRunDirectoryGCC": {
        "Type": "Task",
        "Resource": "arn:aws:states:::batch:submitJob.sync",
        "Parameters": {
          "JobDefinition": "${job_definition_name}",
          "JobName.$": "States.Format('Invoke_CreateRunDirectoryGCC_{}', $.event.nameSuffix)",
          "JobQueue": "${job_queue}",
          "Timeout": {
            "AttemptDurationSeconds": 12000
          },
          "ContainerOverrides": {
            "Environment": [{ 
             "Name": "TAG_NAME",
             "Value.$": "$.event.tag"
            }],
            "Command": ["./scripts/createRunDirGCClassic.sh"]
          }
        },
        "ResultPath": "$.event.createRunDir",
        "Next": "Evaluate_RunDir"
      },
      "Invoke_CreateRunDirectoryGCHP": {
        "Type": "Task",
        "Resource": "arn:aws:states:::batch:submitJob.sync",
        "Parameters": {
          "JobDefinition": "${job_definition_name}",
          "JobName.$": "States.Format('Invoke_CreateRunDirectoryGCHP_{}', $.event.nameSuffix)",
          "JobQueue": "${job_queue}",
          "Timeout": {
            "AttemptDurationSeconds": 12000
          },
          "ContainerOverrides": {
            "ResourceRequirements": [
              {
                "Type": "VCPU",
                "Value.$": "$.event.numCores"
              },
              {
                "Type": "MEMORY",
                "Value.$": "$.event.memory"
              }
            ],
            "Environment": [
              { 
                "Name": "TAG_NAME",
                "Value.$": "$.event.tag"
              },
              { 
                "Name": "NUM_CORES_PER_NODE",
                "Value.$": "$.event.numCores"
              },
              { 
                "Name": "TOTAL_CORES",
                "Value.$": "$.event.numCores"
              },
              { 
                "Name": "CS_RES",
                "Value.$": "$.event.resolution"
              }
            ],
            "Command": ["./scripts/createRunDirGCHP.sh"]
          }
        },
        "ResultPath": "$.event.createRunDir",
        "Next": "Evaluate_RunDir"
      },
      "Evaluate_RunDir": {
        "Type": "Choice",
        "Choices": [
          {
            "And":[
              {
                "Variable": "$.event.runType",
                "StringEquals": "GCC"
              },
              {
                "Variable": "$.event.createRunDir.Status",
                "StringEquals": "SUCCEEDED"
              }
            ],
            "Next": "Invoke_RunBenchmarkGCC"
          },
          {
            "And":[
              {
                "Variable": "$.event.runType",
                "StringEquals": "GCHP"
              },
              {
                "Variable": "$.event.createRunDir.Status",
                "StringEquals": "SUCCEEDED"
              }
            ],
            "Next": "Invoke_RunBenchmarkGCHP"
          }
        ],
        "Default": "WorkflowFailed"
      },
      "Invoke_RunBenchmarkGCC": {
        "Type": "Task",
        "Resource": "arn:aws:states:::batch:submitJob.sync",
        "Parameters": {
          "JobDefinition": "${job_definition_name}",
          "JobName.$": "States.Format('Invoke_RunBenchmarkGCC_{}', $.event.nameSuffix)",
          "JobQueue": "${job_queue}",
          "Timeout": {
            "AttemptDurationSeconds": 120000
          },
          "ContainerOverrides": {
            "ResourceRequirements": [
              {
                "Type": "VCPU",
                "Value.$": "$.event.numCores"
              },
              {
                "Type": "MEMORY",
                "Value.$": "$.event.memory"
              }
            ],
            "Environment": [
              { 
                "Name": "TAG_NAME",
                "Value.$": "$.event.tag"
              }
            ],
            "Command": ["./scripts/runGCClassic.sh"]
          }
        },
        "ResultPath": "$.event.runBenchmark",
        "Next": "Evaluate_Benchmark"
      },
      "Invoke_RunBenchmarkGCHP": {
        "Type": "Task",
        "Resource": "arn:aws:states:::batch:submitJob.sync",
        "Parameters": {
          "JobDefinition": "${job_definition_name}",
          "JobName.$": "States.Format('Invoke_RunBenchmarkGCHP_{}', $.event.nameSuffix)",
          "JobQueue": "${job_queue}",
          "Timeout": {
            "AttemptDurationSeconds": 120000
          },
          "ContainerOverrides": {
            "ResourceRequirements": [
              {
                "Type": "VCPU",
                "Value.$": "$.event.numCores"
              },
              {
                "Type": "MEMORY",
                "Value.$": "$.event.memory"
              }
            ],
            "Environment": [
              { 
                "Name": "TAG_NAME",
                "Value.$": "$.event.tag"
              },
              { 
                "Name": "NUM_CORES_PER_NODE",
                "Value.$": "$.event.numCores"
              },
              { 
                "Name": "TOTAL_CORES",
                "Value.$": "$.event.numCores"
              },
              { 
                "Name": "CS_RES",
                "Value.$": "$.event.resolution"
              }
            ],
            "Command": ["./scripts/runGCHP.sh"]
          }
        },
        "ResultPath": "$.event.runBenchmark",
        "Next": "Evaluate_Benchmark"
      },
      "Evaluate_Benchmark": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.event.runBenchmark.Status",
            "StringEquals": "SUCCEEDED",
            "Next": "WorkflowComplete"
          }
        ],
        "Default": "WorkflowFailed"
      },
      "WorkflowComplete": {
        "Type": "Pass",
        "End": true
      },
      "WorkflowFailed": {
        "Type": "Fail"
      }
    }
  }